{"version":3,"file":"static/js/806.ca7d7070.chunk.js","mappings":"+SAEMA,EAAW,+BACXC,EAAU,mCAEHC,EAAgB,mCAAG,oGACPC,EAAAA,EAAAA,IAAA,UAClBH,EADkB,uCACqBC,IAFd,cACxBG,EADwB,yBAIvBA,EAASC,MAJc,2CAAH,qDAchBC,EAAgB,mCAAG,WAAMC,GAAN,uFACPJ,EAAAA,EAAAA,IAAA,UAClBH,EADkB,iCACeC,EADf,mBACiCM,EADjC,2BADO,cACxBH,EADwB,yBAIvBA,EAASC,KAAKG,SAJS,2CAAH,sDAOhBC,EAAc,mCAAG,WAAMC,GAAN,uFACLP,EAAAA,EAAAA,IAAA,UAClBH,EADkB,kBACAU,EADA,oBACcT,EADd,oBADK,cACtBG,EADsB,yBAIrBA,EAASC,MAJY,2CAAH,sDAOdM,EAAS,mCAAG,WAAMC,GAAN,uFACAT,EAAAA,EAAAA,IAAA,UAClBH,EADkB,kBACAY,EADA,4BAC2BX,EAD3B,oBADA,cACjBG,EADiB,yBAKhBA,EAASC,KAAKQ,MALE,2CAAH,sDAQTC,EAAU,mCAAG,WAAMF,GAAN,uFACDT,EAAAA,EAAAA,IAAA,UAClBH,EADkB,kBACAY,EADA,4BAC2BX,EAD3B,2BADC,cAClBG,EADkB,yBAKjBA,EAASC,KAAKG,SALG,2CAAH,qD,4HCxCR,SAASO,EAAT,GAAwC,IAAD,EAATC,EAAS,EAATA,MAC3C,OACEA,IACE,+BACE,4BACE,gBACEC,IAAG,6CAAwCD,EAAME,aACjDC,IAAKH,EAAMI,eACXC,OAAO,SAET,4BACE,0BACGL,EAAMI,eADT,KAC2BJ,EAAMM,aAAaC,MAAM,EAAG,GADvD,QAGA,wCAAgBC,KAAKC,MAAMT,EAAMU,YAAjC,QAEA,sCACA,uBAAIV,EAAMW,YAEV,oCACA,iCACGX,EAAMY,cADT,aACG,EAAcC,KAAI,gBAAGnB,EAAH,EAAGA,GAAIoB,EAAP,EAAOA,KAAP,OACjB,wBAAcA,GAALpB,EADQ,aAShC,CCnBc,SAASqB,IAAgB,IAAD,QACrC,GAA0BC,EAAAA,EAAAA,UAAS,MAAnC,eAAOhB,EAAP,KAAciB,EAAd,KAEQrB,GAAYsB,EAAAA,EAAAA,MAAZtB,SAERuB,EAAAA,EAAAA,YAAU,YACR1B,EAAAA,EAAAA,IAAeG,GACZwB,KAAKH,GACLI,OAAM,SAAAC,GAAK,OAAIC,QAAQC,IAAIF,EAAhB,GACf,GAAE,CAAC1B,IAEJ,IAAM6B,GAAWC,EAAAA,EAAAA,MACXC,GAAWC,EAAAA,EAAAA,MAMjB,OACE,6BACE,mBAAQC,KAAK,SAASC,QANL,WAAO,IAAD,IACzBH,EAAQ,iBAACF,QAAD,IAACA,GAAD,UAACA,EAAUM,aAAX,aAAC,EAAiBC,YAAlB,QAA0B,IACnC,EAIG,sBAGA,SAACjC,EAAD,CAAoBC,MAAOA,KAE3B,6CAEA,2BACE,yBACE,SAAC,KAAD,CAAM+B,MAAO,CAAEC,KAAI,iBAAEP,QAAF,IAAEA,GAAF,UAAEA,EAAUM,aAAZ,aAAE,EAAiBC,YAAnB,QAA2B,KAAOC,GAAG,OAAxD,qBAIF,yBACE,SAAC,KAAD,CAAMF,MAAO,CAAEC,KAAI,iBAAEP,QAAF,IAAEA,GAAF,UAAEA,EAAUM,aAAZ,aAAE,EAAiBC,YAAnB,QAA2B,KAAOC,GAAG,UAAxD,2BAKJ,SAAC,KAAD,MAGL,C","sources":["Services/serviceAPI.js","components/MovieDetailsMarkup.jsx","pages/MovieDetails.jsx"],"sourcesContent":["import axios from 'axios';\n\nconst BASE_URL = 'https://api.themoviedb.org/3';\nconst API_KEY = '96c6c10d81401dc0172065706a628eea';\n\nexport const getTrendingMovie = async () => {\n  const response = await axios.get(\n    `${BASE_URL}/trending/movie/day?api_key=${API_KEY}`\n  );\n  return response.data;\n};\n\nexport const getMovieDetailsById = async id => {\n  const response = await axios.get(\n    `${BASE_URL}/movie/${id}?api_key=${API_KEY}&language=en-US`\n  );\n  return response.data;\n};\n\nexport const getMovieBySearch = async query => {\n  const response = await axios.get(\n    `${BASE_URL}/search/movie?api_key=${API_KEY}&&query=${query}&language=en-US&page=1`\n  );\n  return response.data.results;\n};\n\nexport const getDetailsById = async id => {\n  const response = await axios.get(\n    `${BASE_URL}/movie/${id}?api_key=${API_KEY}&language=en-US`\n  );\n  return response.data;\n};\n\nexport const getActors = async movieId => {\n  const response = await axios.get(\n    `${BASE_URL}/movie/${movieId}/credits?api_key=${API_KEY}&language=en-US`\n  );\n\n  return response.data.cast;\n};\n\nexport const getReviews = async movieId => {\n  const response = await axios.get(\n    `${BASE_URL}/movie/${movieId}/reviews?api_key=${API_KEY}&language=en-US&page=1`\n  );\n\n  return response.data.results;\n};\n","import PropTypes from 'prop-types';\nexport default function MovieDetailsMarkup({ movie }) {\n  return (\n    movie && (\n      <>\n        <div>\n          <img\n            src={`https://image.tmdb.org/t/p/original${movie.poster_path}`}\n            alt={movie.original_title}\n            height=\"300\"\n          />\n          <div>\n            <h2>\n              {movie.original_title} ({movie.release_date.slice(0, 4)})\n            </h2>\n            <p>User score: {Math.round(movie.popularity)}%</p>\n\n            <h2>Overview</h2>\n            <p>{movie.overviev}</p>\n\n            <h2>Genres</h2>\n            <p>\n              {movie.genres?.map(({ id, name }) => (\n                <li key={id}>{name}</li>\n              ))}\n            </p>\n          </div>\n        </div>\n      </>\n    )\n  );\n}\n\nMovieDetailsMarkup.propTypes = {\n  movie: PropTypes.shape({\n    poster_path: PropTypes.string.isRequired,\n    original_title: PropTypes.string.isRequired,\n    popularity: PropTypes.number.isRequired,\n    overview: PropTypes.string.isRequired,\n    genres: PropTypes.arrayOf(\n      PropTypes.shape({\n        id: PropTypes.number,\n        name: PropTypes.string.isRequired,\n      })\n    ).isRequired,\n  }),\n};\n","import { useState, useEffect } from 'react';\nimport {\n  useParams,\n  Link,\n  Outlet,\n  useLocation,\n  useNavigate,\n} from 'react-router-dom';\n\nimport { getDetailsById } from '../Services/serviceAPI';\nimport MovieDetailsMarkup from 'components/MovieDetailsMarkup';\n\nexport default function MovieDetails() {\n  const [movie, setMovie] = useState(null);\n\n  const { movieId } = useParams();\n\n  useEffect(() => {\n    getDetailsById(movieId)\n      .then(setMovie)\n      .catch(error => console.log(error));\n  }, [movieId]);\n\n  const location = useLocation();\n  const navigate = useNavigate();\n\n  const handleGoBack = () => {\n    navigate(location?.state?.from ?? '/');\n  };\n\n  return (\n    <main>\n      <button type=\"button\" onClick={handleGoBack}>\n        Go back\n      </button>\n      <MovieDetailsMarkup movie={movie} />\n\n      <h3>Additional info</h3>\n\n      <ul>\n        <li>\n          <Link state={{ from: location?.state?.from ?? '/' }} to=\"cast\">\n            Cast\n          </Link>\n        </li>\n        <li>\n          <Link state={{ from: location?.state?.from ?? '/' }} to=\"Reviews\">\n            Reviews\n          </Link>\n        </li>\n      </ul>\n      <Outlet />\n    </main>\n  );\n}\n"],"names":["BASE_URL","API_KEY","getTrendingMovie","axios","response","data","getMovieBySearch","query","results","getDetailsById","id","getActors","movieId","cast","getReviews","MovieDetailsMarkup","movie","src","poster_path","alt","original_title","height","release_date","slice","Math","round","popularity","overviev","genres","map","name","MovieDetails","useState","setMovie","useParams","useEffect","then","catch","error","console","log","location","useLocation","navigate","useNavigate","type","onClick","state","from","to"],"sourceRoot":""}