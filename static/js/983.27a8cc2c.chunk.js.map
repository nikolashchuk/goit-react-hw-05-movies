{"version":3,"file":"static/js/983.27a8cc2c.chunk.js","mappings":"+SAEMA,EAAW,+BACXC,EAAU,mCAEHC,EAAgB,mCAAG,oGACPC,EAAAA,EAAAA,IAAA,UAClBH,EADkB,uCACqBC,IAFd,cACxBG,EADwB,yBAIvBA,EAASC,MAJc,2CAAH,qDAchBC,EAAgB,mCAAG,WAAMC,GAAN,uFACPJ,EAAAA,EAAAA,IAAA,UAClBH,EADkB,iCACeC,EADf,mBACiCM,EADjC,2BADO,cACxBH,EADwB,yBAIvBA,EAASC,KAAKG,SAJS,2CAAH,sDAOhBC,EAAc,mCAAG,WAAMC,GAAN,uFACLP,EAAAA,EAAAA,IAAA,UAClBH,EADkB,kBACAU,EADA,oBACcT,EADd,oBADK,cACtBG,EADsB,yBAIrBA,EAASC,MAJY,2CAAH,sDAOdM,EAAS,mCAAG,WAAMC,GAAN,uFACAT,EAAAA,EAAAA,IAAA,UAClBH,EADkB,kBACAY,EADA,4BAC2BX,EAD3B,oBADA,cACjBG,EADiB,yBAKhBA,EAASC,KAAKQ,MALE,2CAAH,sDAQTC,EAAU,mCAAG,WAAMF,GAAN,uFACDT,EAAAA,EAAAA,IAAA,UAClBH,EADkB,kBACAY,EADA,4BAC2BX,EAD3B,2BADC,cAClBG,EADkB,yBAKjBA,EAASC,KAAKG,SALG,2CAAH,qD,oFCtCR,SAASO,EAAT,GAA2B,IAAXC,EAAU,EAAVA,OACvBC,GAAWC,EAAAA,EAAAA,MACjB,OACE,wBACGF,GACCA,EAAOG,KAAI,gBAAGT,EAAH,EAAGA,GAAIU,EAAP,EAAOA,MAAOC,EAAd,EAAcA,YAAaC,EAA3B,EAA2BA,eAA3B,OACT,yBACE,UAAC,KAAD,CAAMC,MAAO,CAAEC,KAAMP,GAAYQ,GAAE,kBAAaf,GAAhD,WACE,gBACEgB,IAAG,6CAAwCL,GAC3CM,IAAKL,EACLM,MAAM,GACNC,OAAO,SAGT,wBAAKT,QATAV,EADA,KAgBlB,C,oHCpBc,SAASoB,IACtB,OAA4BC,EAAAA,EAAAA,UAAS,IAArC,eAAOf,EAAP,KAAegB,EAAf,KAQA,OANAC,EAAAA,EAAAA,YAAU,YACR/B,EAAAA,EAAAA,MACGgC,MAAK,SAAA7B,GAAI,OAAI2B,EAAU3B,EAAKG,QAAnB,IACT2B,OAAM,SAAAC,GAAK,OAAIC,QAAQC,IAAIF,EAAhB,GACf,GAAE,KAGD,6BACE,6CACC,SAAC,IAAD,CAAMpB,OAAQA,MAGpB,C","sources":["Services/serviceAPI.js","components/List.jsx","pages/HomePage.jsx"],"sourcesContent":["import axios from 'axios';\n\nconst BASE_URL = 'https://api.themoviedb.org/3';\nconst API_KEY = '96c6c10d81401dc0172065706a628eea';\n\nexport const getTrendingMovie = async () => {\n  const response = await axios.get(\n    `${BASE_URL}/trending/movie/day?api_key=${API_KEY}`\n  );\n  return response.data;\n};\n\nexport const getMovieDetailsById = async id => {\n  const response = await axios.get(\n    `${BASE_URL}/movie/${id}?api_key=${API_KEY}&language=en-US`\n  );\n  return response.data;\n};\n\nexport const getMovieBySearch = async query => {\n  const response = await axios.get(\n    `${BASE_URL}/search/movie?api_key=${API_KEY}&&query=${query}&language=en-US&page=1`\n  );\n  return response.data.results;\n};\n\nexport const getDetailsById = async id => {\n  const response = await axios.get(\n    `${BASE_URL}/movie/${id}?api_key=${API_KEY}&language=en-US`\n  );\n  return response.data;\n};\n\nexport const getActors = async movieId => {\n  const response = await axios.get(\n    `${BASE_URL}/movie/${movieId}/credits?api_key=${API_KEY}&language=en-US`\n  );\n\n  return response.data.cast;\n};\n\nexport const getReviews = async movieId => {\n  const response = await axios.get(\n    `${BASE_URL}/movie/${movieId}/reviews?api_key=${API_KEY}&language=en-US&page=1`\n  );\n\n  return response.data.results;\n};\n","import PropTypes from 'prop-types';\nimport { Link, useLocation } from 'react-router-dom';\n\nexport default function List({ movies }) {\n  const location = useLocation();\n  return (\n    <ul>\n      {movies &&\n        movies.map(({ id, title, poster_path, original_title }) => (\n          <li key={id}>\n            <Link state={{ from: location }} to={`/movies/${id}`}>\n              <img\n                src={`https://image.tmdb.org/t/p/original${poster_path}`}\n                alt={original_title}\n                width=\"\"\n                height=\"300\"\n              />\n\n              <h3>{title}</h3>\n            </Link>\n          </li>\n        ))}\n    </ul>\n  );\n}\n\nList.propTypes = {\n  movies: PropTypes.arrayOf(\n    PropTypes.shape({\n      id: PropTypes.number.isRequired,\n      title: PropTypes.string.isRequired,\n      poster_path: PropTypes.string.isRequired,\n      original_title: PropTypes.string.isRequired,\n    })\n  ),\n};\n","import { useState, useEffect } from 'react';\nimport { getTrendingMovie } from '../Services/serviceAPI';\nimport List from '../components/List';\n\nexport default function HomePage() {\n  const [movies, setMovies] = useState([]);\n\n  useEffect(() => {\n    getTrendingMovie()\n      .then(data => setMovies(data.results))\n      .catch(error => console.log(error));\n  }, []);\n\n  return (\n    <main>\n      <h2>Trending Movies</h2>\n      {<List movies={movies} />}\n    </main>\n  );\n}\n"],"names":["BASE_URL","API_KEY","getTrendingMovie","axios","response","data","getMovieBySearch","query","results","getDetailsById","id","getActors","movieId","cast","getReviews","List","movies","location","useLocation","map","title","poster_path","original_title","state","from","to","src","alt","width","height","HomePage","useState","setMovies","useEffect","then","catch","error","console","log"],"sourceRoot":""}